name: Build AmpProfiler Plugin (Cross-Platform)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Check out repo (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v1.13
        with:
          cmake-version: '3.27.7'

      # ---------- Dependencies & ONNX Runtime ----------
      - name: Install dependencies (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config zip curl \
            libasound2-dev libfreetype6-dev libcurl4-openssl-dev \
            libx11-dev libxcomposite-dev libxcursor-dev libxext-dev \
            libxinerama-dev libxrandr-dev libxrender-dev \
            libgl1-mesa-dev libglu1-mesa-dev \
            libgtk-3-dev

      - name: Get ONNX Runtime (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          set -euo pipefail
          ver=1.18.0
          curl -L -o ort.tgz https://github.com/microsoft/onnxruntime/releases/download/v${ver}/onnxruntime-linux-x64-${ver}.tgz
          tar xf ort.tgz
          echo "ONNXRUNTIME_ROOT=$PWD/onnxruntime-linux-x64-${ver}" >> $GITHUB_ENV

      - name: Get ONNX Runtime (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          set -euo pipefail
          ver=1.18.0
          curl -L -o ort.tgz https://github.com/microsoft/onnxruntime/releases/download/v${ver}/onnxruntime-osx-universal2-${ver}.tgz
          tar xf ort.tgz
          echo "ONNXRUNTIME_ROOT=$PWD/onnxruntime-osx-universal2-${ver}" >> $GITHUB_ENV

      - name: Get ONNX Runtime (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $ver = '1.18.0'
          Invoke-WebRequest -OutFile ort.zip -Uri "https://github.com/microsoft/onnxruntime/releases/download/v$ver/onnxruntime-win-x64-$ver.zip"
          Expand-Archive -Path ort.zip -DestinationPath .
          echo "ONNXRUNTIME_ROOT=$PWD\onnxruntime-win-x64-$ver" >> $env:GITHUB_ENV

      # ---------- Configure & Build ----------
      - name: Configure CMake
        shell: bash
        run: cmake -S AmpProfiler/plugin -B build -D CMAKE_BUILD_TYPE=Release

      - name: Build plugin
        shell: bash
        run: cmake --build build --config Release --parallel

      # ---------- Package ----------
      - name: Package plugin (.zip) – macOS & Linux
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          set -euo pipefail
          SRC="build/AmpProfiler_artefacts/Release/VST3/AmpProfiler.vst3"
          OUT="AmpProfiler-${{ matrix.os }}.zip"
          if [ ! -e "$SRC" ]; then
            echo "::error::VST3 not found at $SRC"
            find build -maxdepth 4 -type d -name "*VST3*" -print || true
            exit 1
          fi
          /usr/bin/zip -r "$OUT" "$SRC"

      - name: Package plugin (.zip) – Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $src = "build/AmpProfiler_artefacts/Release/VST3/AmpProfiler.vst3"
          if (-not (Test-Path $src)) { throw "VST3 not found at $src" }
          Compress-Archive -Path $src -DestinationPath "AmpProfiler-windows-latest.zip" -Force

      - name: Upload artifact (zip)
        uses: actions/upload-artifact@v4
        with:
          name: AmpProfiler-${{ matrix.os }}
          path: |
            *.zip
